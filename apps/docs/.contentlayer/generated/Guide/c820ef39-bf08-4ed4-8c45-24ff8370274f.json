{
  "order": 1,
  "name": "Getting started",
  "type": "Guide",
  "_id": "c820ef39-bf08-4ed4-8c45-24ff8370274f",
  "_raw": {},
  "body": {
    "html": "\n            <h2 class=\"notion-heading_2 notion-color-default\">\n                Introduction\n            </h2>\n        \n            <p>\n                The following guide will teach you the basics of @notion-render/client by walking you through how to render your pages using Next.JS.\n            </p>\n        \n            <p>\n                \n            </p>\n        \n            <blockquote class=\"notion-callout notion-color-blue_background\">\n                <div class=\"icon\">\n                <span class=\"notion-emoji\">‚ÑπÔ∏è</span>\n                </div> \n                <div class=\"content\">\n                  If you want to create a full blog, take a look at the Contentlayer <a href=\"https://www.contentlayer.dev/docs/sources/notion\" class=\"notion-text-href\">Notion Source plugin</a>! This documentation has been made with it.\n                </div>\n            </blockquote>\n        \n            <h2 class=\"notion-heading_2 notion-color-default\">\n                üî® Setup the project\n            </h2>\n        \n            <h3 class=\"notion-heading_3 notion-color-default\">\n                Create the Next.JS project\n            </h3>\n        \n            <p>\n                First create a brand new <a href=\"https://nextjs.org/\" class=\"notion-text-href\">Next.JS</a> project and <code class=\"notion-text-code\">cd</code> into it:\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-bash\">$ npx create-next-app notion-render-example\n$ <span class=\"hljs-built_in\">cd</span> notion-render-example</code></pre>\n                \n            </div>\n        \n            <p>\n                As the skeleton contains some styling, delete the content of <code class=\"notion-text-code\">styles/globals.css</code>\n            </p>\n        \n            <h3 class=\"notion-heading_3 notion-color-default\">\n                Install dependencies\n            </h3>\n        \n            <p>\n                Install the library and its dependencies:\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-bash\">$ npm install @notion-render/client @notionhq/client</code></pre>\n                \n            </div>\n        \n            <blockquote class=\"notion-callout notion-color-blue_background\">\n                <div class=\"icon\">\n                <span class=\"notion-emoji\">‚ÑπÔ∏è</span>\n                </div> \n                <div class=\"content\">\n                  The @notionhq/client library is the official Notion JS SDK. It is required to render complexe blocks like tables, columns, etc.\n                </div>\n            </blockquote>\n        \n            <h3 class=\"notion-heading_3 notion-color-default\">\n                Configure the Client and the Renderer\n            </h3>\n        \n            <p>\n                Let‚Äôs create an instance of @notionhq/client and @notion-renderer/client in <code class=\"notion-text-code\">libs/notion.ts</code> that we will use accross our app:\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-typescript\"><span class=\"hljs-comment\">// libs/notion.ts</span>\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Client</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@notionhq/client&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">NotionRenderer</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@notion-render/client&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Client</span>({ <span class=\"hljs-attr\">auth</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">NOTION_TOKEN</span> });\n<span class=\"hljs-keyword\">const</span> renderer = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">NotionRenderer</span>({ client });\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> notion = {\n  client,\n  renderer,\n};</code></pre>\n                \n            </div>\n        \n            <blockquote class=\"notion-callout notion-color-blue_background\">\n                <div class=\"icon\">\n                <span class=\"notion-emoji\">‚ÑπÔ∏è</span>\n                </div> \n                <div class=\"content\">\n                  Follow the guide <a href=\"/846e5e1e0c2a428285998ff9485ab822\" class=\"notion-text-href\">Create Notion Token</a> to create your own integration and get a <code class=\"notion-text-code\">NOTION_TOKEN</code>.\n                </div>\n            </blockquote>\n        \n            <h2 class=\"notion-heading_2 notion-color-default\">\n                üöÄ Render your first page\n            </h2>\n        \n            <h3 class=\"notion-heading_3 notion-color-default\">\n                Setup getServerSideProps\n            </h3>\n        \n            <p>\n                In this guide we will create a simple pages/[slug].tsx page where the slug will be the ID of the Notion Page we will render.\n            </p>\n        \n            <p>\n                In the getServerSideProps function, retreive the slug from the parameters, and use the @notionhq/client instance to get the page blocks.\n            </p>\n        \n            <p>\n                Transform thoses blocks into HTML and pass it in props.\n            </p>\n        \n            <p>\n                \n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-typescript\"><span class=\"hljs-comment\">// pages/[slug].tsx</span>\n\n<span class=\"hljs-keyword\">import</span> { notion } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/libs/notion&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">BlockObjectResponse</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@notionhq/client/build/src/api-endpoints&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">GetServerSideProps</span>, <span class=\"hljs-title class_\">InferGetServerSidePropsType</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;next&quot;</span>;\n\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Data</span> = {\n  <span class=\"hljs-attr\">html</span>: <span class=\"hljs-built_in\">string</span>;\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">getServerSideProps</span>: <span class=\"hljs-title class_\">GetServerSideProps</span>&lt;data&gt; = <span class=\"hljs-keyword\">async</span> ({\n  params,\n}) =&amp;gt; {\n  <span class=\"hljs-keyword\">if</span> (!params || !params.<span class=\"hljs-property\">slug</span>) {\n    <span class=\"hljs-keyword\">return</span> {\n      <span class=\"hljs-attr\">notFound</span>: <span class=\"hljs-literal\">true</span>,\n    };\n  }\n\n  <span class=\"hljs-keyword\">const</span> blocks = <span class=\"hljs-keyword\">await</span> notion.<span class=\"hljs-property\">client</span>.<span class=\"hljs-property\">blocks</span>.<span class=\"hljs-property\">children</span>\n    .<span class=\"hljs-title function_\">list</span>({\n      <span class=\"hljs-attr\">block_id</span>: params.<span class=\"hljs-property\">slug</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-built_in\">string</span>,\n    })\n    .<span class=\"hljs-title function_\">then</span>((res) =&amp;gt; res.<span class=\"hljs-property\">results</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">BlockObjectResponse</span>[]);\n\n  <span class=\"hljs-keyword\">const</span> html = <span class=\"hljs-keyword\">await</span> notion.<span class=\"hljs-property\">renderer</span>.<span class=\"hljs-title function_\">render</span>(...blocks);\n\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">props</span>: {\n      html,\n    },\n  };\n};&lt;/data&gt;</code></pre>\n                \n            </div>\n        \n            <blockquote class=\"notion-callout notion-color-yellow_background\">\n                <div class=\"icon\">\n                <span class=\"notion-emoji\">‚ö†Ô∏è</span>\n                </div> \n                <div class=\"content\">\n                  Notion API can be slow. In production you should avoid Server Side Rendering and use Static Site Generation by using Next.JS features or a tool like Contentlayer.\n                </div>\n            </blockquote>\n        \n            <p>\n                \n            </p>\n        \n            <h3 class=\"notion-heading_3 notion-color-default\">\n                Rendering the HTML\n            </h3>\n        \n            <p>\n                Now that your HTML is available, you can simply render it:\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Page</span>(<span class=\"hljs-params\">{\n  html,\n}: InferGetServerSidePropsType</span>) {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n}</code></pre>\n                \n            </div>\n        \n            <p>\n                \n            </p>\n        \n            <h3 class=\"notion-heading_3 notion-color-default\">\n                Visit your page\n            </h3>\n        \n            <p>\n                Run the app by using <code class=\"notion-text-code\">npm run dev</code> and visit <u class=\"notion-text-underline\"><i class=\"notion-text-italic\">http://localhost:3000/.</i></u>\n            </p>\n        \n            <p>\n                Depending on your page content, you should get something like this:\n            </p>\n        \n            <figure class=\"notion-image\">\n                <img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f531a35c-6780-4e20-8365-ded4d0ac56bb/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230503%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230503T143614Z&X-Amz-Expires=3600&X-Amz-Signature=dd6a341ba25f89e03b09f008a3fd14e787cef70cfbac2f301847c3dbeb12bfab&X-Amz-SignedHeaders=host&x-id=GetObject\" />\n                \n            </figure>\n        \n            <p>\n                \n            </p>\n        \n            <h2 class=\"notion-heading_2 notion-color-default\">\n                üé® Styling your page\n            </h2>\n        \n            <p>\n                In our example page we have Headings, Columns, a Callout and a Bookmark but as you can see there is no style yet.\n            </p>\n        \n            <p>\n                \n            </p>\n        \n            <p>\n                You can use your own style or you can import the theme provided by the library that tries to replicates the Notion design.\n            </p>\n        \n            <p>\n                \n            </p>\n        \n            <p>\n                In this guide we are going to install Tailwind CSS and import the provided theme.\n            </p>\n        \n            <p>\n                \n            </p>\n        \n            <h3 class=\"notion-heading_3 notion-color-default\">\n                Install Tailwind CSS\n            </h3>\n        \n            <p>\n                Installing Tailwind for Next.JS is extremely straight forward:\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-bash\">$ npm install -D tailwindcss postcss autoprefixer\n$ npx tailwindcss init -p</code></pre>\n                \n            </div>\n        \n            <p>\n                \n            </p>\n        \n            <h3 class=\"notion-heading_3 notion-color-default\">\n                Import Tailwind and Notion Theme\n            </h3>\n        \n            <p>\n                In the file styles/globals.css add the following directives to import Tailwind and the provided Notion Theme.\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-bash\"><span class=\"hljs-comment\"># styles/globals.css</span>\n\n@import <span class=\"hljs-string\">&#x27;@notion-render/client/index.css&#x27;</span>;\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;</code></pre>\n                \n            </div>\n        \n            <p>\n                \n            </p>\n        \n            <p>\n                And Voil√†! We have a beautiful Notion styled page!\n            </p>\n        \n            <p>\n                \n            </p>\n        \n            <figure class=\"notion-image\">\n                <img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/9ebfdcd2-89d3-4609-9fbd-632528b737b7/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230503%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230503T143614Z&X-Amz-Expires=3600&X-Amz-Signature=5fc128a582560bacdc4cb0757aa9e6920fab64409e7d2505b635b5a8d505e3b8&X-Amz-SignedHeaders=host&x-id=GetObject\" />\n                \n            </figure>\n        \n            <p>\n                \n            </p>\n        "
  },
  "slug": "getting-started"
}